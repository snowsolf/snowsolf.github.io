<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>snowsolf</title>
  <subtitle>须知人生的参差百态，乃是幸福的本源。 ——罗素</subtitle>
  <link href="/notes/atom.xml" rel="self"/>
  
  <link href="http://www.snowsolf.com/"/>
  <updated>2016-04-19T01:13:34.230Z</updated>
  <id>http://www.snowsolf.com/</id>
  
  <author>
    <name>snowsolf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux-shell-算术运算{expr、bc、dc、(( ))和[ ]}</title>
    <link href="http://www.snowsolf.com/2016/04/18/Linux-shell-math/"/>
    <id>http://www.snowsolf.com/2016/04/18/Linux-shell-math/</id>
    <published>2016-04-18T14:34:05.194Z</published>
    <updated>2016-04-19T01:13:34.230Z</updated>
    
    <content type="html">&lt;p&gt;在Linux下做算术运算时你是如何进行的呢？是不是还在用expr呢？你会说我还会bc还有其它的呢！&lt;/p&gt;
&lt;p&gt;闲话不多扯，干正事！&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;expr&quot;&gt;&lt;a href=&quot;#expr&quot; class=&quot;headerlink&quot; title=&quot;expr&quot;&gt;&lt;/a&gt;expr&lt;/h2&gt;&lt;p&gt;expr在使用中要注意一些书写，如表达式中量和运算符号之间的空格及一些运算符号需要转义，还有一点需要记住，expr只适用于整数之间的运算！&lt;/p&gt;
&lt;h3 id=&quot;表达式&quot;&gt;&lt;a href=&quot;#表达式&quot; class=&quot;headerlink&quot; title=&quot;表达式&quot;&gt;&lt;/a&gt;表达式&lt;/h3&gt;&lt;p&gt;expr的help文档中关于表达式部分如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARG1 | ARG2       若ARG1 的值不为0 或者为空，则返回ARG1，否则返回ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 &amp;amp; ARG2       若两边的值都不为0 或为空，则返回ARG1，否则返回 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 &amp;lt; ARG2       ARG1 小于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 &amp;lt;= ARG2      ARG1 小于或等于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 = ARG2       ARG1 等于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 != ARG2      ARG1 不等于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 &amp;gt;= ARG2      ARG1 大于或等于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 &amp;gt; ARG2       ARG1 大于ARG2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 + ARG2       计算 ARG1 与ARG2 相加之和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 - ARG2       计算 ARG1 与ARG2 相减之差&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 * ARG2       计算 ARG1 与ARG2 相乘之积&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 / ARG2       计算 ARG1 与ARG2 相除之商&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ARG1 % ARG2       计算 ARG1 与ARG2 相除之余数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这一部分相信大家用的最多，也对这些比较了解了，下面我们用一个表达式来说明：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; 9 + 8 - 7 \* 6 / 5 + \( 4 - 3 \) \* 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过结果相信你已知道expr的计算规律，它与我们日常所理解的数学表达式一样，括号的优先级最高，然后是“*”、“/”，而且每个数或符号都需要用空格分隔，结果也是整数。&lt;/p&gt;
&lt;h3 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;p&gt;expr还可以对字符串进行操作：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match 字符串 表达式等于&lt;span class=&quot;string&quot;&gt;&quot;字符串 :表达式&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;substr 字符串 偏移量 长度替换字符串的子串，偏移的数值从 1 起计&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index 字符串 字符在字符串中发现字符的地方建立下标，或者标0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length 字符串字符串的长度&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;match&quot;&gt;&lt;a href=&quot;#match&quot; class=&quot;headerlink&quot; title=&quot;match&quot;&gt;&lt;/a&gt;match&lt;/h4&gt;&lt;p&gt;expr中的expr match $string substring命令在string字符串中匹配substring字符串（substring字符串可以是正则表达式），然后返回匹配到的substring字符串的长度，若找不到则返回0。&lt;/p&gt;
&lt;p&gt;下面我们来个实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:00:01]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;123 456 789&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:00:30]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; match &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;&quot;&lt;/span&gt; .*5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;.*5匹配了6个字符。&lt;/p&gt;
&lt;h4 id=&quot;substr&quot;&gt;&lt;a href=&quot;#substr&quot; class=&quot;headerlink&quot; title=&quot;substr&quot;&gt;&lt;/a&gt;substr&lt;/h4&gt;&lt;p&gt;在shell中可以用&lt;code&gt;{string:position}&lt;/code&gt;和&lt;code&gt;{string:position:length}&lt;/code&gt;进行对string字符串中字符的抽取。第一种是从position位置开始抽取直到字符串结束，第二种是从position位置开始抽取长度为length的子串。而用expr中的&lt;code&gt;expr substr stringstringposition $length&lt;/code&gt;同样能实现上述功能。&lt;/p&gt;
&lt;p&gt;实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:19:17]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;123 456 789&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:19:31]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;str:5&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56 789&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:19:59]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;str:5:3&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:20:07]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; substr &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;&quot;&lt;/span&gt; 5 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从中可以看出&lt;code&gt;{string:position}&lt;/code&gt;和&lt;code&gt;{string:position:length}&lt;/code&gt;从0开始计数，而&lt;code&gt;expr substr stringstringposition $length&lt;/code&gt;从1开始。&lt;/p&gt;
&lt;h4 id=&quot;index&quot;&gt;&lt;a href=&quot;#index&quot; class=&quot;headerlink&quot; title=&quot;index&quot;&gt;&lt;/a&gt;index&lt;/h4&gt;&lt;p&gt;expr中的&lt;code&gt;expr index stringsubstring&lt;/code&gt;索引命令功能在字符串stringsubstring索引命令功能在字符串string上找出substring中字符第一次出现的位置，若找不到则expr index返回0。注意它匹配的是字符而非字符串。&lt;br&gt;实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:35:19]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;123 456 789&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:37:02]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; index &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;&quot;&lt;/span&gt; b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:37:08]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; index &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;&quot;&lt;/span&gt; 9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;length&quot;&gt;&lt;a href=&quot;#length&quot; class=&quot;headerlink&quot; title=&quot;length&quot;&gt;&lt;/a&gt;length&lt;/h4&gt;&lt;p&gt;计算字符串的长度。我们可以用awk中的length(s)进行计算。我们也可以用echo中的&lt;code&gt;echo {\#string}&lt;/code&gt;进行计算，当然也可以expr中的&lt;code&gt;expr length{\#string}&lt;/code&gt;进行计算，当然也可以expr中的expr lengthstring 求出字符串的长度。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:39:39]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;123 456 789&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:39:52]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$&amp;#123;#str&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  15:39:57]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$expr&lt;/span&gt; length &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$str&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;bc&quot;&gt;&lt;a href=&quot;#bc&quot; class=&quot;headerlink&quot; title=&quot;bc&quot;&gt;&lt;/a&gt;bc&lt;/h2&gt;&lt;p&gt;重点来了！&lt;/p&gt;
&lt;p&gt;bc是一种任意精度的计算语言，注意是一种语言，它提供了一些语法结构，比如条件判断、循环等，可以说是很强大的，但是我在实际中还没有找到需要这个用途的场合 。另外一个用途就是用来进行进制转换。&lt;/p&gt;
&lt;p&gt;上面我们介绍的expr之支持整数运算，但对于浮点运算就无能为力了，而且expr不能进行指数运算，而都有bc这些都不再话下。&lt;/p&gt;
&lt;h3 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h3&gt;&lt;p&gt;我们先来了解几个有用的参数：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-i 强制交互模式；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; 使用bc的内置库，bc里有一些数学库，对三角计算等非常实用；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-q 进入bc交互模式时不再输出版本等多余的信息。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;特殊变量&quot;&gt;&lt;a href=&quot;#特殊变量&quot; class=&quot;headerlink&quot; title=&quot;特殊变量&quot;&gt;&lt;/a&gt;特殊变量&lt;/h3&gt;&lt;p&gt;ibase，obase 用于进制转换，ibase是输入的进制，obase是输出的进制，默认是十进制；&lt;/p&gt;
&lt;p&gt;scale 小数保留位数，默认保留0位。&lt;/p&gt;
&lt;h3 id=&quot;交互模式&quot;&gt;&lt;a href=&quot;#交互模式&quot; class=&quot;headerlink&quot; title=&quot;交互模式&quot;&gt;&lt;/a&gt;交互模式&lt;/h3&gt;&lt;p&gt;在shell命令行直接输入bc及能进入bc语言的交互模式。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$bc&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; -q&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4/3                           /*未指定精度默认保留整数*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scale=5                   /*指定精度为5*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4/3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.33333&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ibase=2                    /*指定进制转换的输入机制为二进制，输出默认为是十进制*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1010&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4^2                           /*指数运算，注：指数不能为浮点数*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4*a(1)                        /*计算π值，a()是个函数：arctan()，好吧，老师教的都被狗吃了，π值是等于四倍的arctan(1)么？*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.14159265358979323844&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quit                            /*退出*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;非交互模式&quot;&gt;&lt;a href=&quot;#非交互模式&quot; class=&quot;headerlink&quot; title=&quot;非交互模式&quot;&gt;&lt;/a&gt;非交互模式&lt;/h3&gt;&lt;p&gt;bc也可以进行非交互式的运算，方法是与echo一起使用。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  18:42:27]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;scale=5;9+8-7*6/5^2&quot;&lt;/span&gt;|bc          /*优先级^ &amp;gt; *、/ &amp;gt; +、- */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15.32000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  18:45:35]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;s(2/3*a(1))&quot;&lt;/span&gt;|bc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;                         /*还记得sina(30°)等于0.5么？皇上！ ^_^*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.49999999999999999998&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  18:49:13]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;scale=5;sqrt(15)&quot;&lt;/span&gt;|bc                   /*开方*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.87298&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-08-24/7.18  18:49:18]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[14+1][~]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ibase=16;obase=2;ABC&quot;&lt;/span&gt;|bc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101010111100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更多参考man文档！&lt;/p&gt;
&lt;h2 id=&quot;dc&quot;&gt;&lt;a href=&quot;#dc&quot; class=&quot;headerlink&quot; title=&quot;dc&quot;&gt;&lt;/a&gt;dc&lt;/h2&gt;&lt;p&gt;可能你曾经知道有此命令，也可能你还不知道。dc相比与bc要复杂，但是简单操作还是比较简单。简单的说dc是一直压栈操作，和bc一样，它也可以交互使用，或者与echo一起配合使用。&lt;/p&gt;
&lt;p&gt;它也支持浮点运算。&lt;/p&gt;
&lt;p&gt;但是现在我还没有想到这种压栈式算术运算有什么有点。&lt;/p&gt;
&lt;h3 id=&quot;交互模式-1&quot;&gt;&lt;a href=&quot;#交互模式-1&quot; class=&quot;headerlink&quot; title=&quot;交互模式&quot;&gt;&lt;/a&gt;交互模式&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  20:33:53]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$dc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p      /*输出（3 - 2）*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p          /*输出（-1 * 4）*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p       /*输出（-4 / 2）*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p      /*输出（-2 + 3.4）*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d        /*复制栈顶值*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p         /*输出（4 * 4）*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q         /*退出*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有其他命令如：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c           清除压栈&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d           复制栈顶的值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p           输出栈顶值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q           退出交互模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有其它可以参考对应man文档。&lt;/p&gt;
&lt;h3 id=&quot;非交互模式-1&quot;&gt;&lt;a href=&quot;#非交互模式-1&quot; class=&quot;headerlink&quot; title=&quot;非交互模式&quot;&gt;&lt;/a&gt;非交互模式&lt;/h3&gt;&lt;p&gt;一个算式让你就看的差不多了。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  20:47:43]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;4 3 * 2 + 1 -p&quot;&lt;/span&gt;|dc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;算式是：（4 * 3 + 2 - 1）。&lt;/p&gt;
&lt;p&gt;是不是很简单！&lt;/p&gt;
&lt;h2 id=&quot;amp&quot;&gt;&lt;a href=&quot;#amp&quot; class=&quot;headerlink&quot; title=&quot;(( )) &amp;amp; [ ]&quot;&gt;&lt;/a&gt;(( )) &amp;amp; [ ]&lt;/h2&gt;&lt;p&gt;这两个在shell中比较常见，这两个和expr命令有些类似，也是用于整数计算。&lt;/p&gt;
&lt;p&gt;他们支持的运算符号有如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; |    位或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ ||   若前后两者都不为0，则返回1，否则返回0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;amp;  位与&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &amp;amp;&amp;amp;  若前者为0，不再对后者进行处理，否则对后者处理，后者不为0时返回1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; !=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;gt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; - &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; / &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; %&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;带+号的两个运算符其实是shell支持的运算符。&lt;br&gt;这两个对与expr的优点是：运算符号全部不需要转义。&lt;br&gt;我们一味的在shell中用那些别人没用过的命令来做同一件事，但不要忘了(( ))和[ ]是shell中常见的，而且非常实用，但并非是你常用的！&lt;/p&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  20:47:51]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $(( 2 + 5 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:14]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $(( 2 * 5 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:19]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $(( 2 - 5 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:23]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $(( 2 % 5 ))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:29]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $[ 2 % 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:45]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $[ 2 - 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:50]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $[ 2 * 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;┌[2013-09-16/8.12  21:11:55]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├[7+10][~/shell]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└[snowsolf@Ubuntu-LTS-1 ╰_╯]&lt;span class=&quot;variable&quot;&gt;$echo&lt;/span&gt; $[ 2 + 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;在Linux下做算术运算时你是如何进行的呢？是不是还在用expr呢？你会说我还会bc还有其它的呢！&lt;/p&gt;
&lt;p&gt;闲话不多扯，干正事！&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式应用---replace()</title>
    <link href="http://www.snowsolf.com/2016/04/14/JavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%BA%94%E7%94%A8---replace()/"/>
    <id>http://www.snowsolf.com/2016/04/14/JavaScript正则表达式应用---replace()/</id>
    <published>2016-04-14T13:23:58.469Z</published>
    <updated>2016-04-14T15:35:04.121Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;replace()&lt;/code&gt;方法使用一个替换值&lt;code&gt;（replacement）&lt;/code&gt;替换掉一个匹配模式&lt;code&gt;（pattern）&lt;/code&gt;在原字符串中某些或所有的匹配项，并返回替换后的字符串。这个替换模式可以是字符串或者&lt;code&gt;RegExp&lt;/code&gt;（正则表达式），替换值可以是一个字符串或者一个函数。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.replace(regexp|substr, newSubStr|function[, flags])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;regexp：&lt;/em&gt;&lt;/strong&gt;一个&lt;code&gt;RegExp&lt;/code&gt;对象。该正则所匹配的内容会被第二个参数的返回值替换掉。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;substr：&lt;/em&gt;&lt;/strong&gt;一个要被 &lt;code&gt;newSubStr&lt;/code&gt; 替换的字符串。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;newSubStr：&lt;/em&gt;&lt;/strong&gt;替换掉第一个参数在原字符串中的匹配部分。该字符串中可以内插一些特殊的变量名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;function：&lt;/em&gt;&lt;/strong&gt;一个用来创建新子字符串的函数，该函数的返回值将替换掉第一个参数匹配到的结果。该函数的参数描述请参考 指定一个函数作为参数 小节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;flags：&lt;/em&gt;&lt;/strong&gt;注意：&lt;code&gt;flags&lt;/code&gt; 参数在 &lt;code&gt;v8&lt;/code&gt; 内核&lt;code&gt;（Chrome and NodeJs）&lt;/code&gt; 中不起作用。一个字符串指定正则表达式标志的组合。在 &lt;code&gt;String.prototype.replace()&lt;/code&gt;方法中使用&lt;code&gt;flags&lt;/code&gt;参数不是符合标准的并且不赞成这样做。使用一个带有相应标志&lt;code&gt;（flags）&lt;/code&gt;的&lt;code&gt;RegExp&lt;/code&gt;对象来代替此参数。该参数的值应该是下面的一个或多个字符，具体作用见下：&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标签&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全局匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;多行模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;返回值&quot;&gt;&lt;a href=&quot;#返回值&quot; class=&quot;headerlink&quot; title=&quot;返回值&quot;&gt;&lt;/a&gt;返回值&lt;/h2&gt;&lt;p&gt;一个部分或全部匹配由替代模式所取代的新的字符串。&lt;/p&gt;
&lt;h1 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h1&gt;&lt;p&gt;该方法并不改变调用它的字符串本身，而只是返回替换后的字符串。&lt;/p&gt;
&lt;p&gt;在进行全局的搜索替换时，第一个参数要么时包含&lt;code&gt;g&lt;/code&gt;标志的正则表达式，要么时包含&lt;code&gt;g&lt;/code&gt;标志的字符串。&lt;/p&gt;
&lt;h2 id=&quot;使用字符串作为参数&quot;&gt;&lt;a href=&quot;#使用字符串作为参数&quot; class=&quot;headerlink&quot; title=&quot;使用字符串作为参数&quot;&gt;&lt;/a&gt;使用字符串作为参数&lt;/h2&gt;&lt;p&gt;替换字符串可以插入下面的特殊变量名：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量名&lt;/th&gt;
&lt;th&gt;代表的值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;插入一个 &lt;code&gt;&amp;quot;$&amp;quot;&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;插入匹配的子串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;`$``&lt;/td&gt;
&lt;td&gt;插入当前匹配的子串左边的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$&amp;#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;插入当前匹配的子串右边的内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$n&lt;/code&gt; or &lt;code&gt;$nn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;假如第一个参数时&lt;code&gt;RegExp&lt;/code&gt;对象，并且&lt;code&gt;n&lt;/code&gt;或&lt;code&gt;nn&lt;/code&gt;是个十进制的数字，那么插入第&lt;code&gt;n&lt;/code&gt;个括号匹配的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;指定一个函数作为参数&quot;&gt;&lt;a href=&quot;#指定一个函数作为参数&quot; class=&quot;headerlink&quot; title=&quot;指定一个函数作为参数&quot;&gt;&lt;/a&gt;指定一个函数作为参数&lt;/h2&gt;&lt;p&gt;你可以指定一个函数作为第二个参数。在这种情况下，当匹配执行后， 该函数就会执行。 函数的返回值作为替换字符串。（注意：上面提到的特殊替换参数在这里不能被使用。）另外要注意的是，&lt;strong&gt;如果第一个参数是正则表达式，并且其为全局匹配模式，那么这个方法将被多次调用，每次匹配都会被调用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下面是该函数的参数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量名&lt;/th&gt;
&lt;th&gt;代表的值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;match&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配的子串。（对应于上述的&lt;code&gt;$&amp;amp;&lt;/code&gt;。）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;p1&lt;/code&gt;， &lt;code&gt;p2&lt;/code&gt;， …&lt;/td&gt;
&lt;td&gt;假如&lt;code&gt;replace()&lt;/code&gt;方法的第一个参数是一个&lt;code&gt;RegExp&lt;/code&gt;对象，则代表第n个括号匹配的字符串。（对应于上述的&lt;code&gt;$1&lt;/code&gt;，&lt;code&gt;$2&lt;/code&gt;等。）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是&lt;code&gt;“abcd”&lt;/code&gt;，匹配到的子字符串时&lt;code&gt;“bc”&lt;/code&gt;，那么这个参数将时1）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;被匹配的原字符串。(精确的参数个数依赖于&lt;code&gt;replace()&lt;/code&gt;的第一个参数是否是一个正则表达式对象，以及这个正则表达式中指定了多少个括号子串。)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下面的例子将会使&lt;code&gt;newString&lt;/code&gt;变成&lt;code&gt;&amp;#39;abc - 12345 - #$*%&amp;#39;&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;replacer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match, p1, p2, p3, offset, string&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// p1 is nondigits, p2 digits, and p3 non-alphanumerics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [p1, p2, p3].join(&lt;span class=&quot;string&quot;&gt;&#39; - &#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newString = &lt;span class=&quot;string&quot;&gt;&#39;abc12345#$*%&#39;&lt;/span&gt;.replace(&lt;span class=&quot;regexp&quot;&gt;/([^\d]*)(\d*)([^\w]*)/&lt;/span&gt;, replacer);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h1&gt;&lt;h2 id=&quot;在-replace-中使用-global-和-ignore-选项&quot;&gt;&lt;a href=&quot;#在-replace-中使用-global-和-ignore-选项&quot; class=&quot;headerlink&quot; title=&quot;在 replace() 中使用 global 和 ignore 选项&quot;&gt;&lt;/a&gt;在 replace() 中使用 global 和 ignore 选项&lt;/h2&gt;&lt;p&gt;下面的例子中，正则表达式包含有全局替换&lt;code&gt;(g)&lt;/code&gt;和忽略大小写&lt;code&gt;(i)&lt;/code&gt;的选项，这使得&lt;code&gt;replace&lt;/code&gt;方法用&lt;code&gt;&amp;#39;oranges&amp;#39;&lt;/code&gt;替换掉了所有出现的&lt;code&gt;&amp;quot;apples&amp;quot;&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; re = &lt;span class=&quot;regexp&quot;&gt;/apples/gi&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;Apples are round, and apples are juicy.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newstr = str.replace(re, &lt;span class=&quot;string&quot;&gt;&quot;oranges&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(newstr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和上面的例子比起来，下面的例子中&lt;code&gt;replace&lt;/code&gt;方法的第一个参数使用字符串而不是正则表达式，&lt;code&gt;g&lt;/code&gt;和&lt;code&gt;i&lt;/code&gt;选项只能放在三个参数中。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;Apples are round, and apples are juicy.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newstr = str.replace(&lt;span class=&quot;string&quot;&gt;&quot;apples&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;oranges&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gi&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(newstr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这两个例子都打印出 &lt;code&gt;&amp;quot;oranges are round, and oranges are juicy.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;在-replace-方法中使用正则直接量&quot;&gt;&lt;a href=&quot;#在-replace-方法中使用正则直接量&quot; class=&quot;headerlink&quot; title=&quot;在 replace()方法中使用正则直接量&quot;&gt;&lt;/a&gt;在 replace()方法中使用正则直接量&lt;/h2&gt;&lt;p&gt;下面的例子中，&lt;code&gt;replace()&lt;/code&gt;方法的第一个参数使用正则表达式直接量并且使用了&lt;code&gt;i&lt;/code&gt;(忽略大小写)选项&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;Twas the night before Xmas...&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newstr = str.replace(&lt;span class=&quot;regexp&quot;&gt;/xmas/i&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Christmas&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(newstr);  &lt;span class=&quot;comment&quot;&gt;// Twas the night before Christmas...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打印出 “Twas the night before Christmas…”&lt;/p&gt;
&lt;h2 id=&quot;交换字符串中的两个单词&quot;&gt;&lt;a href=&quot;#交换字符串中的两个单词&quot; class=&quot;headerlink&quot; title=&quot;交换字符串中的两个单词&quot;&gt;&lt;/a&gt;交换字符串中的两个单词&lt;/h2&gt;&lt;p&gt;下面的例子演示了如何交换一个字符串中两个单词的位置，这个脚本使用&lt;code&gt;$1&lt;/code&gt; 和 &lt;code&gt;$2&lt;/code&gt; 代替替换文本。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; re = &lt;span class=&quot;regexp&quot;&gt;/(\w+)\s(\w+)/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;John Smith&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newstr = str.replace(re, &lt;span class=&quot;string&quot;&gt;&quot;$2, $1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(newstr);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打印出 &lt;code&gt;&amp;quot;Smith, John&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;使用一个函数来修改匹配到的字符。&quot;&gt;&lt;a href=&quot;#使用一个函数来修改匹配到的字符。&quot; class=&quot;headerlink&quot; title=&quot;使用一个函数来修改匹配到的字符。&quot;&gt;&lt;/a&gt;使用一个函数来修改匹配到的字符。&lt;/h2&gt;&lt;p&gt;在这个例子中，所有出现的大写字母转换未小写，并且在匹配位置前加一个连字符。重要的是，在返回一个替换了的字符串前需要在匹配元素前需要进行添加操作。&lt;/p&gt;
&lt;p&gt;在返回前，替换函数允许匹配片段作为参数，并且将它和连字符进行连接作为新的片段。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;styleHyphenFormat&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;propertyName&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;upperToHyphenLower&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; + match.toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; propertyName.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/g&lt;/span&gt;, upperToHyphenLower);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此代码 &lt;code&gt;styleHyphenFormat(&amp;#39;borderTop&amp;#39;)&lt;/code&gt;将返回 &lt;code&gt;&amp;#39;border-top&amp;#39;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;因为我们想在最终的替换中进一步转变匹配结果，所以我们必须使用一个函数。这迫使我们在使用&lt;code&gt;toLowerCase()&lt;/code&gt;方法前进行评估。如果我们尝试不用一个函数进行匹配，那么使用&lt;code&gt;toLowerCase()&lt;/code&gt; 方法将不会有效。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newString = propertyName.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;$&amp;amp;&#39;&lt;/span&gt;.toLowerCase());  &lt;span class=&quot;comment&quot;&gt;// won&#39;t work&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是因为&lt;code&gt;&amp;#39;$&amp;amp;&amp;#39;.toLowerCase()&lt;/code&gt;首先作为一个字符串（导致相同的’$&amp;amp;’）之前使用字符作为模式。&lt;/p&gt;
&lt;h2 id=&quot;将华氏温度转换为对等的摄氏温度&quot;&gt;&lt;a href=&quot;#将华氏温度转换为对等的摄氏温度&quot; class=&quot;headerlink&quot; title=&quot;将华氏温度转换为对等的摄氏温度&quot;&gt;&lt;/a&gt;将华氏温度转换为对等的摄氏温度&lt;/h2&gt;&lt;p&gt;下面的例子演示如何将华氏温度转换为对等的摄氏温度。华氏温度用一个数字加一个&lt;code&gt;&amp;quot;F&amp;quot;&lt;/code&gt;来表示，这个函数将返回一个数字加&lt;code&gt;&amp;quot;C&amp;quot;&lt;/code&gt;来表示的摄氏温度。例如，如果输入是&lt;code&gt;212F&lt;/code&gt;，这个函数将返回&lt;code&gt;100C&lt;/code&gt;。如果输入数字时&lt;code&gt;0F&lt;/code&gt;，这个方法将返回&lt;code&gt;&amp;quot;-17.77777777777778C&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;正则表达式&lt;code&gt;test&lt;/code&gt;检查任何数字是否以&lt;code&gt;F&lt;/code&gt;结尾。华氏温度通过第二个参数&lt;code&gt;p1&lt;/code&gt;进入函数。这个函数基于华氏温度作为字符串传递给&lt;code&gt;f2c&lt;/code&gt;函数设置成摄氏温度。然后&lt;code&gt;f2c()&lt;/code&gt;返回摄氏温度。这个函数与&lt;code&gt;Perl&lt;/code&gt;的 &lt;code&gt;s///e&lt;/code&gt; 标志相似。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2c&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match, p1, offset, s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ((p1&lt;span class=&quot;number&quot;&gt;-32&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; test = &lt;span class=&quot;regexp&quot;&gt;/(\d+(?:\.\d*)?)F/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x.replace(test, convert);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;数字转为千分位&quot;&gt;&lt;a href=&quot;#数字转为千分位&quot; class=&quot;headerlink&quot; title=&quot;数字转为千分位&quot;&gt;&lt;/a&gt;数字转为千分位&lt;/h2&gt;&lt;p&gt;数字千分位就是将数字三个一分，如&lt;code&gt;1234567890&lt;/code&gt;转为&lt;code&gt;1,234,567,890&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.replace(&lt;span class=&quot;regexp&quot;&gt;/\d&amp;#123;1,3&amp;#125;(?=(\d&amp;#123;3&amp;#125;)+$)/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; match + &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;详简&lt;/strong&gt;：正则表达式&lt;code&gt;/\d{1,3}(?=(\d{3})+$)/g&lt;/code&gt;中的&lt;code&gt;\d&lt;/code&gt;表示匹配数字，&lt;code&gt;{1,3}&lt;/code&gt;表示匹配1到3次，&lt;code&gt;\d{1,3}&lt;/code&gt;表示匹配连续的1到3个数字，&lt;code&gt;\d{3}&lt;/code&gt;匹配连续的三个数字，&lt;code&gt;(?=)&lt;/code&gt;表示反向匹配，即为从后向前匹配，&lt;code&gt;(?=(\d{3})+$)&lt;/code&gt;就表示从后向前三位数字一匹配，至少匹配一次，而最前面必须有1到3个数字，即第一次的&lt;code&gt;\d{1,3}&lt;/code&gt;，最后的参数&lt;code&gt;g&lt;/code&gt;表示全局匹配，匹配完所有。&lt;/p&gt;
&lt;p&gt;下面在回调函数中多添加几个参数。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.replace(&lt;span class=&quot;regexp&quot;&gt;/\d&amp;#123;1,3&amp;#125;(?=(\d&amp;#123;3&amp;#125;)+$)/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match, p1, offset, string&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//return s+&#39;,&#39;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(match, p1, offset, string);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;match&lt;/code&gt;为&lt;code&gt;\d{1,3}&lt;/code&gt;匹配到的字符串，&lt;code&gt;p1&lt;/code&gt;是&lt;code&gt;(\d{3})&lt;/code&gt;每次匹配到的字符串，&lt;code&gt;offset&lt;/code&gt;为&lt;code&gt;match&lt;/code&gt;的起始位置（从0开始），&lt;code&gt;string&lt;/code&gt;始终为原始字符串。&lt;br&gt;输出结果如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;890&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1234567890&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;234&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;890&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1234567890&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;567&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;890&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1234567890&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;以上文章多数拷贝于&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;replace()&lt;/a&gt;，本人也翻译了一部分，有什么错误及理解不当的地方还望指正！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;replace()&lt;/code&gt;方法使用一个替换值&lt;code&gt;（replacement）&lt;/code&gt;替换掉一个匹配模式&lt;code&gt;（pattern）&lt;/code&gt;在原字符串中某些或所有的匹配项，并返回替换后的字符串。这个替换模式可以是字符串或者&lt;code&gt;RegExp&lt;/code&gt;（正则表达式），替换值可以是一个字符串或者一个函数。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>zTree 双击和单击事件冲突解决</title>
    <link href="http://www.snowsolf.com/2016/04/14/zTree%20%E5%8F%8C%E5%87%BB%E5%92%8C%E5%8D%95%E5%87%BB%E4%BA%8B%E4%BB%B6%E5%86%B2%E7%AA%81%E8%A7%A3%E5%86%B3/"/>
    <id>http://www.snowsolf.com/2016/04/14/zTree 双击和单击事件冲突解决/</id>
    <published>2016-04-14T13:21:01.588Z</published>
    <updated>2016-04-15T01:05:14.078Z</updated>
    
    <content type="html">&lt;p&gt;如果zTree回调方法中既有点击事件处理方法，又有双击处理方法，因为双击是两次单击，所以双击会触发两次单击事件，即双击会触发两次单击事件和一次双击事件，而且先触发两次单击，再触发双击事件。如果使两个事件不冲突，处理如下：&lt;/p&gt;
&lt;p&gt;对单击事件处理方法进行一定的延时，延时时间大于双击间隔，这样双击时第一次的单击因为还在延时，第二次单击已经到来，然后取消第一次的单击，双击也已触发，并取消第二次的单击事件，这样就可以正常触发双击事件处理方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;具体代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; intervalTimer = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;zTreeOnClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event, treeId, treeNode&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clearTimeout(intervalTimer); &lt;span class=&quot;comment&quot;&gt;//取消上次延时未执行的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	intervalTimer = setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// click 事件的处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//延时300毫秒执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;zTreeOnDblClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event, treeId, treeNode&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clearTimeout(intervalTimer); &lt;span class=&quot;comment&quot;&gt;//取消上次延时未执行的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// dblclick 事件的处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;github&lt;/code&gt;地址：&lt;a href=&quot;https://github.com/zTree/zTree_v3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/zTree/zTree_v3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官网地址：&lt;a href=&quot;http://www.ztree.me/v3/main.php#_zTreeInfo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ztree.me/v3/main.php#_zTreeInfo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果zTree回调方法中既有点击事件处理方法，又有双击处理方法，因为双击是两次单击，所以双击会触发两次单击事件，即双击会触发两次单击事件和一次双击事件，而且先触发两次单击，再触发双击事件。如果使两个事件不冲突，处理如下：&lt;/p&gt;
&lt;p&gt;对单击事件处理方法进行一定的延时，延时时间大于双击间隔，这样双击时第一次的单击因为还在延时，第二次单击已经到来，然后取消第一次的单击，双击也已触发，并取消第二次的单击事件，这样就可以正常触发双击事件处理方法。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.snowsolf.com/2016/04/14/hello-world/"/>
    <id>http://www.snowsolf.com/2016/04/14/hello-world/</id>
    <published>2016-04-14T01:52:58.861Z</published>
    <updated>2016-04-15T01:05:37.778Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
